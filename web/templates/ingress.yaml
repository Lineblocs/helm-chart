apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  {{- include "resource.metadata" (dict "name" "" "context" .) }}
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    default-ssl-certificate: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: "true"
    #service.beta.kubernetes.io/do-loadbalancer-hostname: "lineblocs-test.com"
    ingress.kubernetes.io/proxy-body-size: "128m"
    nginx.org/proxy-connect-timeout: "30s"
    nginx.org/proxy-read-timeout: "20s"
    nginx.org/client-max-body-size: "128m"
    nginx.ingress.kubernetes.io/proxy-body-size: "128m"
spec:
  tls:
    - hosts:
        {{- range (include "lineblocs.ingress.hosts" . | splitList ",") }}
        - {{ . }}
        {{- end }}
      secretName: hello-kubernetes-tls
  rules:
    - host: lineblocs-test.com
      http:
        paths:
          - backend:
              serviceName: lineblocs-com
              servicePort: 80
    - host: app.lineblocs-test.com
      http:
        paths:
          - backend:
              serviceName: lineblocs-app
              servicePort: 80
    - host: editor.lineblocs-test.com
      http:
        paths:
          - backend:
              serviceName: lineblocs-editor
              servicePort: 80
    - host: phpmyadmin.lineblocs-test.com
      http:
        paths:
          - backend:
              serviceName: phpmyadmin-service
              servicePort: 80
    - host: internals.lineblocs-test.com
      http:
        paths:
          - backend:
              serviceName: lineblocs-internals
              servicePort: 80
    - host: tsc.lineblocs-test.com
      http:
        paths:
          - backend:
              serviceName: lineblocs-tsc-compiler
              servicePort: 80