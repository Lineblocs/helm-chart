global:
  externalMysqlVersion: "5.7"

asterisk:
  #nodeSelector:
  #  mediaServerNode: 'true'
  autoscaling:
    enabled: true
    maxReplicas: 10
    minReplicas: 3
    targetCPUUtilizationPercentage: 80
    scaleDownSeconds: 300
  containers:
    - name: apps
      image: lineblocs/ari-apps:master
      resources:
        limits:
          cpu: "300m"
          memory: "256Mi"
        requests:
          cpu: "10m"
          memory: "128Mi"
    - name: asterisk
      image: lineblocs/asterisk:master
      resources:
        limits:
          cpu: "300m"
          memory: "2048Mi"
        requests:
          cpu: "10m"
          memory: "128Mi"
    - name: monitor
      image: lineblocs/media-monitor:master
      resources:
        limits:
          cpu: "300m"
          memory: "256Mi"
        requests:
          cpu: "10m"
          memory: "128Mi"
  envs:
    configs:
      ARI_USE_PROXY: false
      CLOUD: ""
      DEPLOYMENT_DOMAIN: lineblocs-test.com
      GOOGLE_APPLICATION_CREDENTIALS: "/app/service.json"
      LINEBLOCS_REGION: xyz
      LOG_LEVEL: INFO
      NATS_URL: nats://natshost:4222
    secrets:
      - ami-secret
      - ari-secret
      - db-secret
      - lineblocs-secret
  expandNode: true
  hostNetwork: true
  service:
    ports:
      - port: 80
        targetPort: 80
  tolerations:
    - key: dedicated
      effect: NoSchedule
      operator: Equal
      value: experimental

rtpproxy:
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10000
    targetCPUUtilizationPercentage: 80
    scaleDownSeconds: 300
  containers:
    - name: rtpproxy
      image: lineblocs/rtpproxy:master
      resources:
        requests:
          cpu: "10m"
          memory: "128Mi"
        limits:
          cpu: "300m"
          memory: "2048Mi"
  hostNetwork: true
  expandPods: true
  tolerations:
    - key: dedicated
      operator: Equal
      value: experimental
      effect: NoSchedule

mngrs:
  containers:
    - name: recordings-mngr
      image: lineblocs/recordings-mngr:master
    - name: billing-mngr
      image: lineblocs/billing-mngr:master
  envs:
    secrets:
      - ari-secret
      - db-secret
    configs:
      DEPLOYMENT_DOMAIN: lineblocs.com
      LOG_LEVEL: INFO

k8sevents:
  containers:
    - name: k8svents
      image: atomist/k8svent
    - name: events-processor
      image: lineblocs/k8s-events:master
      ports:
        - containerPort: 8000
  service:
    ports:
      - name: webhook
        targetPort: 8000
        port: 80
  serviceAccountName: voip-lineblocs-admin
  envs:
    secrets:
      - db-secret
    configs:
      K8SEVENT_WEBHOOKS: http://127.0.0.1:8000/processEvent

opensips:
  controllerType: DaemonSet
  containers:
    - name: opensips
      image: lineblocs/opensips-proxy:master
    - name: rtpproxy
      image: lineblocs/rtpproxy:master
      resources:
        requests:
          cpu: "100m"
          memory: "1024Mi"
        limits:
          cpu: "300m"
          memory: "2048Mi"
  envs:
    secrets:
      - db-secret
      - lineblocs-secret
    configs:
      RTPPROXY_IPV4: 127.0.0.1
      CLOUD: ""
  hostNetwork: true

grpc:
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    scaleDownSeconds: 300
  containers:
    - name: grpc-processor
      image: lineblocs/grpc-proxy:master
      ports:
        - containerPort: 8017
        - containerPort: 9001
      livenessProbe:
        httpGet:
          path: /healthz
          port: 8017
          httpHeaders:
            - name: X-Health
              value: health
        initialDelaySeconds: 3
        periodSeconds: 3
      resources:
        requests:
          cpu: "10m"
          memory: "128Mi"
        limits:
          cpu: "300m"
          memory: "256Mi"
  service:
    ports:
      - name: websocket
        port: 8017
      - name: grpc
        port: 9001
  envs:
    secrets:
      - db-secret
    configs:
      LINEBLOCS_REGION: ca1

cronjob-monthly:
  controllerType: CronJob
  containers:
    - name: monthlybill
      image: lineblocs/crontabs:master
      args:
        - /bin/bash
        - -c
        - cd /app/ && ./main.go monthly
  restartPolicy: OnFailure
  schedule: "0 0 1 * *"
  envs:
    secrets:
      - aws-secret
      - mailgun-secret
      - stripe-secret

# These RBAC rules are only for testing right now
# TODO: Add proper, fine-grained rules
rbac:
  - rules:
      - apiGroups: [ "" ]
        resources: [ "pods","endpoints","services","nodes" ]
        verbs: [ "get", "watch", "list" ]
      - apiGroups: [ "apps" ]
        resources: [ "deployments" ]
        verbs: [ "get", "watch", "list", "update", "patch" ]
    subjects:
      - kind: User
        name: system:serviceaccount:voip:default
        apiGroup: rbac.authorization.k8s.io
    roleName: voip-manager
    clusterRoleName: voip-manager
  - roleExists: true
    subjects:
      - kind: ServiceAccount
        # Reference to upper's `metadata.name`
        name: default
        # Reference to upper's `metadata.namespace`
        namespace: voip
    roleName: cluster-admin
    clusterRoleName: voip-lineblocs-admin
    clusterWide: true
